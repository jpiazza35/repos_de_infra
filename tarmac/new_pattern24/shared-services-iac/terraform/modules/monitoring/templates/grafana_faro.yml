# apiVersion: monitoring.grafana.com/v1alpha2
# kind: GrafanaAgent
# metadata:
#   name: grafana-agent
#   namespace: ${namespace}
#   labels:
#     app: grafana-agent
# spec:
#   image: grafana/agent:${grafana_agent_image_tag}
#   integrations:
#     selector:
#       matchLabels:
#           agent: grafana-agent-integrations
#   logLevel: info
#   serviceAccountName: grafana-agent
#   metrics:
#     instanceSelector:
#       matchLabels:
#         agent: grafana-agent-metrics
#     externalLabels:
#       cluster: cloud

#   logs:
#     instanceSelector:
#       name: primary-credentials-metrics
#       namespace: ${namespace}
#       matchLabels:
#         agent: grafana-agent-logs
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: grafana-agent
#   namespace: ${namespace}
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: grafana-agent
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - nodes
#   - nodes/proxy
#   - nodes/metrics
#   - services
#   - endpoints
#   - pods
#   - events
#   verbs:
#   - get
#   - list
#   - watch
# - apiGroups:
#   - networking.k8s.io
#   resources:
#   - ingresses
#   verbs:
#   - get
#   - list
#   - watch
# - nonResourceURLs:
#   - /metrics
#   - /metrics/cadvisor
#   verbs:
#   - get
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: grafana-agent
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: grafana-agent
# subjects:
# - kind: ServiceAccount
#   name: grafana-agent
#   namespace: ${namespace}
# ---
# apiVersion: monitoring.grafana.com/v1alpha2
# kind: MetricsInstance
# metadata:
#   name: primary
#   namespace: ${namespace}
#   labels:
#     agent: grafana-agent-metrics
# spec:
#   remoteWrite:
#   - url: http://${ monitoring_ingress }/${ prometheus_release_name }/
#     basicAuth:
#       username:
#         name: primary-credentials-metrics
#         key: ${ faro_credentials_logs_user }
#       password:
#         name: primary-credentials-metrics
#         key: ${ faro_credentials_logs_password }

#   # Supply an empty namespace selector to look in all namespaces. Remove
#   # this to only look in the same namespace as the MetricsInstance CR
#   serviceMonitorNamespaceSelector: {}
#   serviceMonitorSelector:
#     matchLabels:
#       instance: primary

#   # Supply an empty namespace selector to look in all namespaces. Remove
#   # this to only look in the same namespace as the MetricsInstance CR.
#   podMonitorNamespaceSelector: {}
#   podMonitorSelector:
#     matchLabels:
#       instance: primary

#   # Supply an empty namespace selector to look in all namespaces. Remove
#   # this to only look in the same namespace as the MetricsInstance CR.
#   probeNamespaceSelector: {}
#   probeSelector:
#     matchLabels:
#       instance: primary
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: primary-credentials-metrics
#   namespace: ${namespace}
# stringData:
#   username: ${ faro_credentials_metrics_user }
#   password: ${ faro_credentials_metrics_password }
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   labels:
#     instance: primary
#   name: kubelet-monitor
#   namespace: ${namespace}
# spec:
#   endpoints:
#   - bearerTokenFile: /var/run//kubernetes.io/serviceaccount/token
#     honorLabels: true
#     interval: 60s
#     metricRelabelings:
#     - action: keep
#       regex: kubelet_cgroup_manager_duration_seconds_count|go_goroutines|kubelet_pod_start_duration_seconds_count|kubelet_runtime_operations_total|kubelet_pleg_relist_duration_seconds_bucket|volume_manager_total_volumes|kubelet_volume_stats_capacity_bytes|container_cpu_usage_seconds_total|container_network_transmit_bytes_total|kubelet_runtime_operations_errors_total|container_network_receive_bytes_total|container_memory_swap|container_network_receive_packets_total|container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|kubelet_running_pod_count|node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate|container_memory_working_set_bytes|storage_operation_errors_total|kubelet_pleg_relist_duration_seconds_count|kubelet_running_pods|rest_client_request_duration_seconds_bucket|process_resident_memory_bytes|storage_operation_duration_seconds_count|kubelet_running_containers|kubelet_runtime_operations_duration_seconds_bucket|kubelet_node_config_error|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_running_container_count|kubelet_volume_stats_available_bytes|kubelet_volume_stats_inodes|container_memory_rss|kubelet_pod_worker_duration_seconds_count|kubelet_node_name|kubelet_pleg_relist_interval_seconds_bucket|container_network_receive_packets_dropped_total|kubelet_pod_worker_duration_seconds_bucket|container_start_time_seconds|container_network_transmit_packets_dropped_total|process_cpu_seconds_total|storage_operation_duration_seconds_bucket|container_memory_cache|container_network_transmit_packets_total|kubelet_volume_stats_inodes_used|up|rest_client_requests_total
#       sourceLabels:
#       - __name__
#     port: https-metrics
#     relabelings:
#     - sourceLabels:
#       - __metrics_path__
#       targetLabel: metrics_path
#     - action: replace
#       targetLabel: job
#       replacement: integrations/kubernetes/kubelet
#     scheme: https
#     tlsConfig:
#       insecureSkipVerify: true
#   namespaceSelector:
#     matchNames:
#     - ${namespace}
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: kubelet
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   labels:
#     instance: primary
#   name: cadvisor-monitor
#   namespace: ${namespace}
# spec:
#   endpoints:
#   - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
#     honorLabels: true
#     honorTimestamps: false
#     interval: 60s
#     metricRelabelings:
#     - action: keep
#       regex: kubelet_cgroup_manager_duration_seconds_count|go_goroutines|kubelet_pod_start_duration_seconds_count|kubelet_runtime_operations_total|kubelet_pleg_relist_duration_seconds_bucket|volume_manager_total_volumes|kubelet_volume_stats_capacity_bytes|container_cpu_usage_seconds_total|container_network_transmit_bytes_total|kubelet_runtime_operations_errors_total|container_network_receive_bytes_total|container_memory_swap|container_network_receive_packets_total|container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|kubelet_running_pod_count|node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate|container_memory_working_set_bytes|storage_operation_errors_total|kubelet_pleg_relist_duration_seconds_count|kubelet_running_pods|rest_client_request_duration_seconds_bucket|process_resident_memory_bytes|storage_operation_duration_seconds_count|kubelet_running_containers|kubelet_runtime_operations_duration_seconds_bucket|kubelet_node_config_error|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_running_container_count|kubelet_volume_stats_available_bytes|kubelet_volume_stats_inodes|container_memory_rss|kubelet_pod_worker_duration_seconds_count|kubelet_node_name|kubelet_pleg_relist_interval_seconds_bucket|container_network_receive_packets_dropped_total|kubelet_pod_worker_duration_seconds_bucket|container_start_time_seconds|container_network_transmit_packets_dropped_total|process_cpu_seconds_total|storage_operation_duration_seconds_bucket|container_memory_cache|container_network_transmit_packets_total|kubelet_volume_stats_inodes_used|up|rest_client_requests_total
#       sourceLabels:
#       - __name__
#     path: /metrics/cadvisor
#     port: https-metrics
#     relabelings:
#     - sourceLabels:
#       - __metrics_path__
#       targetLabel: metrics_path
#     - action: replace
#       targetLabel: job
#       replacement: integrations/kubernetes/cadvisor
#     scheme: https
#     tlsConfig:
#       insecureSkipVerify: true
#   namespaceSelector:
#     matchNames:
#     - ${namespace}
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: kubelet
# ---
# apiVersion: monitoring.grafana.com/v1alpha2
# kind: LogsInstance
# metadata:
#   name: primary
#   namespace: ${namespace}
#   labels:
#     agent: grafana-agent-logs
# spec:
#   clients:
#   - url: ${ingress_monitoring_name}/loki
#     basicAuth:
#       username:
#         name: primary-credentials-logs
#         key: ${ faro_credentials_logs_user }
#       password:
#         name: primary-credentials-logs
#         key: ${ faro_credentials_logs_password }

#   # Supply an empty namespace selector to look in all namespaces. Remove
#   # this to only look in the same namespace as the LogsInstance CR
#   podLogsNamespaceSelector: {}
#   podLogsSelector:
#     matchLabels:
#       instance: primary
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: primary-credentials-logs
#   namespace: ${namespace}
# stringData:
#   username: ${ faro_credentials_logs_user }
#   password: ${ faro_credentials_logs_password }
# ---
# apiVersion: monitoring.grafana.com/v1alpha2
# kind: PodLogs
# metadata:
#   labels:
#     instance: primary
#   name: kubernetes-pods
#   namespace: ${namespace}
# spec:
#   pipelineStages:
#     - docker: {}
#   namespaceSelector:
#     matchNames:
#     - ${namespace}
#   selector:
#     matchLabels: {}
