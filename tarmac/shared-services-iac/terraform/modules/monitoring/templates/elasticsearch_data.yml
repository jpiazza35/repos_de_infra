replicas: ${es_data_replicas}

esMajorVersion: ${es_major_version}

clusterName: ${es_cluster_name}

clusterHealthCheckParams: "wait_for_status=green&timeout=30s"

nodeGroup: data

antiAffinity: "soft"

roles:
  - data
  - data_content
  - data_hot
  - data_warm
  - data_cold
  - data_frozen
  - ingest

rbac:
  create: ${es_rbac_enable}

image: ${es_image}
imageTag: ${es_image_tag}

persistence:
  enabled: true

volumeClaimTemplate:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: ${es_data_persistence_disk_size}

resources: ${es_data_resources}

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5

extraEnvs:
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: ${es_cluster_name}-master-credentials
        key: password
  - name: xpack.security.enabled 
    value: "true" 
  - name: xpack.security.transport.ssl.enabled 
    value: "true" 
  - name: xpack.security.http.ssl.enabled 
    value: "true" 
  - name: xpack.security.transport.ssl.verification_mode 
    value: "certificate" 
  - name: xpack.security.transport.ssl.key 
    value: "/usr/share/elasticsearch/config/certs/tls.key" 
  - name: xpack.security.transport.ssl.certificate 
    value: "/usr/share/elasticsearch/config/certs/tls.crt"
  - name: xpack.security.transport.ssl.certificate_authorities
    value: "/usr/share/elasticsearch/config/certs/ca.crt"
  - name: xpack.security.http.ssl.key
    value: "/usr/share/elasticsearch/config/certs/tls.key"
  - name: xpack.security.http.ssl.certificate
    value: "/usr/share/elasticsearch/config/certs/tls.crt"
  - name: xpack.security.http.ssl.certificate_authorities
    value: "/usr/share/elasticsearch/config/certs/ca.crt"

esConfig:
  elasticsearch.yml: |
    node.roles: []

secret:
  enabled: false

createCert: false
secretMounts:
  - name: elastic-certificates
    secretName: ${es_cluster_name}-master-certs
    path: /usr/share/elasticsearch/config/certs
