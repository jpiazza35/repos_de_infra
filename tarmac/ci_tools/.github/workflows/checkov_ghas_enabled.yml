name: Running Checkov tool for analysis 

on:
  workflow_call:
    inputs:
      directory:
        description: 'Directory where checkov will put resulst'
        required: true
        type: string
        default: './results'
      skip_check:
        description: 'list of skip findings that need to be skipped at org level'
        required: false
        type: string
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create ${{ inputs.directory }} directory for report files
        run: mkdir -p ${{ inputs.directory }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Test with Checkov
        id: checkov
        continue-on-error: true
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          skip_check: '${{ inputs.skip_check }}'
          soft_fail: false
          output_format: 'sarif'
          output_file_path: ${{ inputs.directory }}

      - name: Count issues
        id: count_issues
        run: |
          issue_count=$(cat ${{ inputs.directory }}/results_sarif.sarif | jq '.runs[].results | length')
          error_count=$(cat ${{ inputs.directory }}/results_sarif.sarif | jq '[.runs[].results[] | select(.level == "error")] | length')
          warning_count=$(cat ${{ inputs.directory }}/results_sarif.sarif | jq '[.runs[].results[] | select(.level == "warning")] | length')

          echo "ISSUE_COUNT=$issue_count" >> $GITHUB_ENV
          echo "ERROR_COUNT"=$error_count >> $GITHUB_ENV
          echo "WARNING_COUNT"=$warning_count >> $GITHUB_ENV

          echo "::set-output name=issue_count::$issue_count"
          echo "::set-output name=warning_count::$warning_count"
          echo "::set-output name=error_count::$error_count"
          echo "$ISSUE_COUNT"
          echo "$ERROR_COUNT"
          echo "$WARNING_COUNT"

      - name: Comment PR
        if: github.event_name == 'pull_request'
        run: |
          base_url="https://github.com/${{ github.repository }}/security/code-scanning"
          branch=$(jq -r ".pull_request.head.ref" "$GITHUB_EVENT_PATH")
          pr_number=${{ github.event.pull_request.number }} 
          query="?query=is%3Aopen+pr%3A"
          full_url="${base_url}${query}${pr_number}"
          warning_url="${full_url}+severity%3Awarning"
          error_url="${full_url}+severity%3Aerror%2Chigh"
          issue_count=${{ steps.count_issues.outputs.issue_count }}

          comment="## Checkov results for ${{ github.repository  }}:
          - **The ammount of Issues found in the branch ${branch} by PR number ${pr_number} is :** *${{ env.ISSUE_COUNT }}*
          - **Total Warnings is ${{ steps.count_issues.outputs.warning_count }}** [**View warning details here**]($warning_url)
          - **Errors are ${{ steps.count_issues.outputs.error_count }}** [**View Errors and High severity findings here**]($error_url)"
      
          echo "$comment" > comment_body.txt
          gh pr comment ${{ github.event.pull_request.number }} --body-file comment_body.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_COUNT: ${{ steps.count_issues.outputs.issue_count }}
       

      - name: Upload Checkov SARIF report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: checkov-report-sarif
          path: 
            ${{ inputs.directory }}/results_sarif.sarif
      

  report:
    needs: build
    runs-on: ubuntu-latest
    steps:
  
      - name: Download Checkov report
        uses: actions/download-artifact@v2
        with:
          name: checkov-report-sarif
          path: ${{ inputs.directory }}
     
      - name: Upload SARIF file  by Checkov to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ inputs.directory }}/results_sarif.sarif